const e=e=>null==e;class n extends HTMLElement{connectedCallback(){this.props=(n=>{const t=(e=>e.find((e=>"data"===e.nodeName)))([...n]),s=[...n].filter((e=>"data"!==e.nodeName)).reduce(((e,n)=>({...e,[n.nodeName]:n.nodeValue})),{});if(e(t))return s;try{return{...s,...JSON.parse(t.nodeValue)}}catch(e){console.log("ERROR: No data",e)}})(this.attributes),this.render()}render(){const{icon:e,label:n,size:t="",className:s="t-2xs-500"}=this.props;this.innerHTML=`\n            <nb-icon icon="${e}"></nb-icon>\n            <p class="${s}">\n                ${n}\n                ${t&&`<span>${t}</span>`}\n            </p>\n        `}}customElements.get("nb-item")||customElements.define("nb-item",n);export{n as default};
