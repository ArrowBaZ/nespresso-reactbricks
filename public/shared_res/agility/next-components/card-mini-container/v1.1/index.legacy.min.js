const e=e=>n(JSON.stringify(e)),n=e=>e?e.toString().replace(/"/g,"&quot;").replace(/'/g,"&apos;"):"",r=e=>null==e;class t extends HTMLElement{connectedCallback(){this.props=(e=>{const n=(e=>e.find((e=>"data"===e.nodeName)))([...e]),t=[...e].filter((e=>"data"!==e.nodeName)).reduce(((e,n)=>({...e,[n.nodeName]:n.nodeValue})),{});if(r(n))return t;try{return{...t,...JSON.parse(n.nodeValue)}}catch(e){console.log("ERROR: No data",e)}})(this.attributes),this.render()}render(){const n=e(this.props);this.innerHTML=`\n            <nb-layout-cards data="${n}">\n                ${this.renderCards()}\n            </nb-layout-cards>\n        `}renderCards(){const{cards:e=[]}=this.props;return e.map(this.renderCard).join("")}renderCard(n){return`<nb-card-mini data="${e(n)}"></nb-card-mini>`}}customElements.get("nb-card-mini-container")||customElements.define("nb-card-mini-container",t);export{t as default};
