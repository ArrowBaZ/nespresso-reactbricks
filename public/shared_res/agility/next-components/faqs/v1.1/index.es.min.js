const n=n=>null==n,e=(n,e)=>{const{ref:t}=e.dataset,s=t.match(/(\w+)\[(.+)\]/);return null!==s?a(n,e,s):{...n,[e.dataset.ref]:e}},a=(n,e,[,a,t])=>(void 0===n[a]&&(n[a]=[]),n[a][t]=e,n);class t extends HTMLElement{connectedCallback(){this.props=(e=>{const a=(n=>n.find((n=>"data"===n.nodeName)))([...e]),t=[...e].filter((n=>"data"!==n.nodeName)).reduce(((n,e)=>({...n,[e.nodeName]:e.nodeValue})),{});if(n(a))return t;try{return{...t,...JSON.parse(a.nodeValue)}}catch(n){console.log("ERROR: No data",n)}})(this.attributes),this.classes=this.createClasses(),this.render(),this.refs=[...this.querySelectorAll("[data-ref]")].reduce(e,{})}createClasses(){const{padding_top:n,padding_bottom:e}=this.props.layout;return{base:`nb-faqs ${n} ${e} `,heading:"nb-faqs__heading h-2xl-300"}}render(){const{layout:n,campaign:e}=this.props,{heading:a=""}=this.props.copywriting,{contrast:t="light",background_color:s="white_1000"}=n;this.innerHTML=`\n            <nb-container\n                contrast="${t}"\n                background_color="${s}"\n                campaign_id="${e.id}"\n                campaign_name="${e.name}"\n                campaign_creative="${e.creative}"\n                campaign_position="${e.position}"\n                classname="${this.classes.base}"\n            >\n                ${a&&`<h2 class="${this.classes.heading}">${a}</h2>`}\n                ${this.renderAccordion()}\n            </nb-container>\n        `}renderAccordion(){const{accordion:n}=this.props.copywriting,e=JSON.stringify(n);return n&&`<nb-accordion data='${e}'></nb-accordion>`}}customElements.get("nb-faqs")||customElements.define("nb-faqs",t);export{t as default};
