const e=e=>e?e.toString().replace(/"/g,"&quot;").replace(/'/g,"&apos;"):"",t=e=>null==e;class n extends HTMLElement{constructor(){super(),this.template=""}connectedCallback(){this.props=this._createProps(),this.onStart?.(),this.loadTemplate(),this.onReady?.()}_createProps(e=null){const t=e||this.attributes;let n;try{n=[...t].reduce(((e,t)=>({...e,[t.nodeName]:t.nodeValue})),{});const e=[...t].find((e=>"data"===e.nodeName));return null==e?n:{...n,...JSON.parse(e.nodeValue)}}catch(e){console.log("ERROR: No data",e)}}render(e=!1){e&&(this.innerHTML="");const t=(e,n)=>{const s=e=>3===e.nodeType?"text":8===e.nodeType?"comment":e.tagName.toLowerCase(),i=e=>e.childNodes&&e.childNodes.length>0?null:e.textContent;var a=Array.prototype.slice.call(n.childNodes),r=Array.prototype.slice.call(e.childNodes),l=a.length-r.length;if(l>0)for(;l>0;l--)a[a.length-l].parentNode.removeChild(a[a.length-l]);r.forEach((function(e,r){if(a[r])if(s(e)===s(a[r])){var l=i(e);if(l&&l!==i(a[r])&&(a[r].textContent=l),a[r].childNodes.length>0&&e.childNodes.length<1)a[r].innerHTML="";else{if(a[r].childNodes.length<1&&e.childNodes.length>0){var o=document.createDocumentFragment();return t(e,o),void a[r].appendChild(o)}e.childNodes.length>0&&t(e,a[r])}}else a[r].parentNode.replaceChild(e.cloneNode(!0),a[r]);else n.appendChild(e.cloneNode(!0))}))},n=(s=this.template,(new DOMParser).parseFromString(s,"text/html").body);var s;t(n,this)}loadTemplate(e="",t=!1){this.template=""===e?this.template:`${e}`,this.render(t)}disconnectedCallback(){this.onDestroy?.()}}customElements.get("nb-nespresso-element")||customElements.define("nb-nespresso-element",n);const s={get is(){const{innerWidth:e,devicePixelRatio:t}=window;return{mobile:e<768,mobile_tablet:e<1024,tablet:e>=768&&e<1024,desktop:e>=1024&&t<=1,retina:e>=1024&&t>1}},lt:e=>window.innerWidth<e},i={getResponsiveSrc:e=>{const t=(n=e,Array.isArray(n)||"object"==typeof n?["mobile","tablet","desktop","retina"].find((e=>!0===s.is[e]&&e in n&&""!==n[e])):null);var n;return t?e[t]:e.desktop}};class a extends HTMLElement{connectedCallback(){this.props=(e=>{const n=(e=>e.find((e=>"data"===e.nodeName)))([...e]),s=[...e].filter((e=>"data"!==e.nodeName)).reduce(((e,t)=>({...e,[t.nodeName]:t.nodeValue})),{});if(t(n))return s;try{return{...s,...JSON.parse(n.nodeValue)}}catch(e){console.log("ERROR: No data",e)}})(this.attributes),this.classes=this.createClasses(),this.styles=this.createStyles(),this.render()}createClasses(){const{contrast:e="light"}=this.props.layout,t="nb-highlighted-card",n=Object.keys(s.is).filter((e=>s.is[e])).join(" ");return{base:t,viewport:n,container:[t,`${t}--${e}`,`${n}`].join(" ")}}createStyles(){const{background:e}=this.props.layout,t=e?i.getResponsiveSrc(e):"";return{container:e?[`background-image: url('${t}')`].join(" "):""}}renderDefault(){const{heading:e="",text:t="",visual:n={}}=this.props.copywriting,{src:s="",alt:i=""}=n;this.innerHTML=`\n            <div\n                class="${this.classes.container}"\n                ${this.styles.container&&`style="${this.styles.container}"`}\n            >\n                ${e&&`<h2 class="nb-highlighted-card__heading">${e}</h2>`}\n                ${t&&`<p  class="nb-highlighted-card__body">${t}</p>`}\n                ${s&&`<img loading="lazy" class="${this.classes.base}__visual" src="${s}" alt="${i}" />`}\n                ${this.renderPopin()}\n                ${this.renderCta()}\n                ${this.renderLink()}\n            </div>`}renderTablet(){const{heading:e="",text:t="",visual:n={}}=this.props.copywriting,{src:s="",alt:i=""}=n;this.innerHTML=`\n            <div\n                class="${this.classes.container}"\n                ${this.styles.container&&`style="${this.styles.container}"`}\n            >\n                ${s&&`<img loading="lazy" class="${this.classes.base}__visual" src="${s}" alt="${i}" />`}\n                <div\n                    class="nb-highlighted-card__tabletRightCol">\n                    ${e&&`<h2 class="nb-highlighted-card__heading">${e}</h2>`}\n                    ${t&&`<p  class="nb-highlighted-card__body">${t}</p>`}\n                    ${this.renderPopin()}\n                    ${this.renderCta()}\n                    ${this.renderLink()}\n                </div>\n            </div>`}render(){s.is.tablet?this.renderTablet():this.renderDefault()}renderCta(){const{cta:t={}}=this.props.copywriting,{label:n=""}=t;if(""===n)return"";const s=(t=>e(JSON.stringify(t)))(t);return n&&`<nb-cta class="${this.classes.base}__cta" data="${s}">${n}</nb-cta>`}renderLink(){const{copywriting:{popin:e={}}={}}=this.props,{id:t="",text:n=""}=e;return n?`\n            <nb-link\n                size="xsmall"\n                color="black"\n                popin_id="${t}"\n                label="${n}"\n            ></nb-link>\n        `:""}renderPopin(){const{copywriting:{popin:e={}}={}}=this.props,{id:t="",image:n="",heading:s="",description:i="",image_alt:a="",close:r=""}=e;return t&&`<nb-popin\n                id="${t}"\n                heading="${s}"\n                variation="next"\n                bgcolor="highlight"\n                image="${n}"\n                image_alt="${a}"\n                label_close="${r}"\n            >\n                ${i}\n            </nb-popin>`}}customElements.get("nb-highlighted-card")||customElements.define("nb-highlighted-card",a);export{a as default};
