class t extends HTMLElement{constructor(){super()}connectedCallback(){this.props=this.createProps(),this.classes=this.createClasses(),this.render()}createProps(){return[...this.attributes].reduce(((t,e)=>({...t,[e.nodeName]:e.nodeValue})),{})}createClasses(){const{padding_top:t="pt0",padding_bottom:e="pb0"}=this.props,s="nb-disclaimer";return{root:[s,t,e].join(" "),text:[`${s}__text`,"t-sm-400"].join(" ")}}render(){const{text:t="",content:e=""}=this.props;this.innerHTML=`\n          <nb-container\n            contrast="light"\n            element_class="${this.classes.root}"\n          >\n              <p class="${this.classes.text}">${t}</p>\n              ${e&&`<nb-tooltip content="${e}" />`}\n          </nb-container>\n        `}disconnectedCallback(){}attributeChangedCallback(){}adoptedCallback(){}}customElements.get("nb-disclaimer")||customElements.define("nb-disclaimer",t);export{t as default};
