const e=e=>null==e;class n extends HTMLElement{connectedCallback(){this.props=(n=>{const t=(e=>e.find((e=>"data"===e.nodeName)))([...n]),s=[...n].filter((e=>"data"!==e.nodeName)).reduce(((e,n)=>({...e,[n.nodeName]:n.nodeValue})),{});if(e(t))return s;try{return{...s,...JSON.parse(t.nodeValue)}}catch(e){console.log("ERROR: No data",e)}})(this.attributes),this.render()}render(){const{value:e,a11y_level_of:n="of",max:t="5"}=this.props;this.innerHTML=`\n            <p class="sr-only">${e} ${n} ${t}</p>\n            <div>${this.renderLevels(e,t)}</div>\n            `}renderLevels(e,n){let t="";for(let s=1;s<=n;s++)t+=this.renderLevel(s,e);return t}renderLevel(e,n){return`<span class="${e<=n?"selected":""}"></span>`}}customElements.get("nb-level")||customElements.define("nb-level",n);export{n as default};
