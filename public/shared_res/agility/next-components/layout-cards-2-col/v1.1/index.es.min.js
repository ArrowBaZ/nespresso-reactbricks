const n=n=>null==n;class t extends HTMLElement{constructor(){super(),this.slot=this.innerHTML}connectedCallback(){this.props=(t=>{const e=(n=>n.find((n=>"data"===n.nodeName)))([...t]),o=[...t].filter((n=>"data"!==n.nodeName)).reduce(((n,t)=>({...n,[t.nodeName]:t.nodeValue})),{});if(n(e))return o;try{return{...o,...JSON.parse(e.nodeValue)}}catch(n){console.log("ERROR: No data",n)}})(this.attributes),this.classList.add("nb-layout-cards-2-col"),this.render()}render(){const{layout:n={contrast:"light",background_color:""}}=this.props,t=this.slot;this.innerHTML=`\n            <nb-container\n              contrast="${n.contrast}"\n              background_color="${n.background_color}"\n              element_class="nb-layout-cards-2-col-inner"\n            >\n              ${t}\n            </nb-container>\n        `}}customElements.get("nb-layout-cards-2-col")||customElements.define("nb-layout-cards-2-col",t);export{t as default};
