const e=e=>null==e;class n extends HTMLElement{constructor(){super(),this.props={}}connectedCallback(){this.props=(n=>{const t=(e=>e.find((e=>"data"===e.nodeName)))([...n]),o=[...n].filter((e=>"data"!==e.nodeName)).reduce(((e,n)=>({...e,[n.nodeName]:n.nodeValue})),{});if(e(t))return o;try{return{...o,...JSON.parse(t.nodeValue)}}catch(e){console.log("ERROR: No data",e)}})(this.attributes),this.render()}render(){const{icon:e="loading",state:n="is-loading"}=this.props;this.innerHTML=`<nb-icon icon="${e}" class="${n}"></nb-icon>`}}customElements.get("nb-loader")||customElements.define("nb-loader",n);export{n as default};
